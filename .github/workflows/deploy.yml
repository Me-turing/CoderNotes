# workflow 名称，可以自定义
name: Deploy GitHub Pages

# 触发条件：在代码 push 到 master 分支后，自动执行该 workflow
on:
    push:
        branches:
            - main

# 解决方案
permissions:
    contents: write

# 任务
jobs:
    build-and-deploy:
        # 服务器环境：最新版 Ubuntu，也可以自定义版本
        runs-on: ubuntu-latest
        steps:
            # 拉取代码
            - name: Checkout
              uses: actions/checkout@v2
              with:
                  fetch-depth: 0

            # 设置 Node.js 版本
            - name: Setup Node.js environment
              uses: actions/setup-node@v1
              with:
                  node-version: "18.15.0"

            # 缓存 node_modules
            - name: Cache dependencies
              uses: actions/cache@v2
              id: yarn-cache
              with:
                  path: |
                      **/node_modules
                  key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-yarn-

            # 如果缓存没有命中，安装依赖
            - name: Install dependencies
              if: steps.yarn-cache.outputs.cache-hit != 'true'
              run: yarn --frozen-lockfile

            # 生成静态文件
            - name: Build
              run: npm run docs:build
              env:
                  NODE_OPTIONS: '--max-old-space-size=6144'

            - name: Clone Repository B
              run: git clone https://github.com/Me-turing/CodeNotes.git

            - name: Copy Build Output
              run: cp -r src/.vuepress/dist CodeNotes/

            - name: Commit and Push to Repository B
              run: |
                  cd CodeNotes
                  git config user.email "2339989978@qq.com"
                  git config user.name "SEVENTEEN"
                  git add .
                  git commit -m "Update build"
                  git push origin main # 推送更改到仓库 B 的 main 分支

#            # 部署到 GitHub Pages
#            - name: Deploy
#              uses: crazy-max/ghaction-github-pages@v2
#              env:
#                  GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }} # ACCESS_TOKEN 是创建的 Secret 名称，替换为你自己创建的名称
#              with:
#                  target-branch: gh-pages # 部署到 gh-pages 分支，master 分支存放的是项目源码，而 gh-pages 分支则用来存放生成的静态文件
#                  build_dir: src/.vuepress/dist # vuepress 生成的静态文件存放的地方
