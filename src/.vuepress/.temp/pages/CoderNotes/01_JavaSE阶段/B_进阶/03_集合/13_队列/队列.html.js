export const data = JSON.parse("{\"key\":\"v-ffc770fa\",\"path\":\"/CoderNotes/01_JavaSE%E9%98%B6%E6%AE%B5/B_%E8%BF%9B%E9%98%B6/03_%E9%9B%86%E5%90%88/13_%E9%98%9F%E5%88%97/%E9%98%9F%E5%88%97.html\",\"title\":\"队列\",\"lang\":\"zh-CN\",\"frontmatter\":{\"title\":\"队列\",\"icon\":\"file\",\"order\":1,\"author\":\"十七\",\"date\":\"2023-06-15 周四\",\"category\":[\"JavaSE阶段\"],\"tag\":[\"Java基础\"],\"sticky\":true,\"index\":true,\"description\":\"引入 特点：先进先出（FIFO） （First In First Out） 他有两端，一端是让新元素进去，一端是让老元素出去 在日常的社会生活中，比如排队买票使用的就是队列。在计算机网络架构中、网络自身内部的各种计算资源，无论是多进程共享的 CPU 时间，还是多用户共享的打印机，也都需要借助队列结构实现合理和优化的分配。 同样，我们也可以创建双端队列：...\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://meturing.gitee.io/coder-notes/coder-notes/CoderNotes/01_JavaSE%E9%98%B6%E6%AE%B5/B_%E8%BF%9B%E9%98%B6/03_%E9%9B%86%E5%90%88/13_%E9%98%9F%E5%88%97/%E9%98%9F%E5%88%97.html\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"队列\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"引入 特点：先进先出（FIFO） （First In First Out） 他有两端，一端是让新元素进去，一端是让老元素出去 在日常的社会生活中，比如排队买票使用的就是队列。在计算机网络架构中、网络自身内部的各种计算资源，无论是多进程共享的 CPU 时间，还是多用户共享的打印机，也都需要借助队列结构实现合理和优化的分配。 同样，我们也可以创建双端队列：...\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:image\",\"content\":\"https://meturing.gitee.io/coder-notes/coder-notes/\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"meta\",{\"name\":\"twitter:card\",\"content\":\"summary_large_image\"}],[\"meta\",{\"name\":\"twitter:image:alt\",\"content\":\"队列\"}],[\"meta\",{\"property\":\"article:author\",\"content\":\"十七\"}],[\"meta\",{\"property\":\"article:tag\",\"content\":\"Java基础\"}],[\"meta\",{\"property\":\"article:published_time\",\"content\":\"2023-06-14T16:00:00.000Z\"}],[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"队列\\\",\\\"image\\\":[\\\"https://meturing.gitee.io/coder-notes/coder-notes/\\\"],\\\"datePublished\\\":\\\"2023-06-14T16:00:00.000Z\\\",\\\"dateModified\\\":null,\\\"author\\\":[{\\\"@type\\\":\\\"Person\\\",\\\"name\\\":\\\"十七\\\"}]}\"]]},\"headers\":[{\"level\":2,\"title\":\"引入\",\"slug\":\"引入\",\"link\":\"#引入\",\"children\":[]},{\"level\":2,\"title\":\"阻塞队列 - BlockingQueue\",\"slug\":\"阻塞队列-blockingqueue\",\"link\":\"#阻塞队列-blockingqueue\",\"children\":[{\"level\":3,\"title\":\"阻塞的概念\",\"slug\":\"阻塞的概念\",\"link\":\"#阻塞的概念\",\"children\":[]},{\"level\":3,\"title\":\"常用的API\",\"slug\":\"常用的api\",\"link\":\"#常用的api\",\"children\":[]},{\"level\":3,\"title\":\"子类 - ArrayBlockingQueue\",\"slug\":\"子类-arrayblockingqueue\",\"link\":\"#子类-arrayblockingqueue\",\"children\":[]},{\"level\":3,\"title\":\"子类 - LinkedBlockingQueue\",\"slug\":\"子类-linkedblockingqueue\",\"link\":\"#子类-linkedblockingqueue\",\"children\":[]},{\"level\":3,\"title\":\"子类 - SynchronousQueue\",\"slug\":\"子类-synchronousqueue\",\"link\":\"#子类-synchronousqueue\",\"children\":[]},{\"level\":3,\"title\":\"子类 - PriorityBlockingQueue\",\"slug\":\"子类-priorityblockingqueue\",\"link\":\"#子类-priorityblockingqueue\",\"children\":[]},{\"level\":3,\"title\":\"子类 - DelayQueue\",\"slug\":\"子类-delayqueue\",\"link\":\"#子类-delayqueue\",\"children\":[]}]},{\"level\":2,\"title\":\"双端队列Deque\",\"slug\":\"双端队列deque\",\"link\":\"#双端队列deque\",\"children\":[]}],\"git\":{\"createdTime\":null,\"updatedTime\":null,\"contributors\":[]},\"readingTime\":{\"minutes\":14.43,\"words\":4330},\"filePathRelative\":\"CoderNotes/01_JavaSE阶段/B_进阶/03_集合/13_队列/队列.md\",\"localizedDate\":\"2023年6月15日\",\"autoDesc\":true,\"excerpt\":\"\"}")
