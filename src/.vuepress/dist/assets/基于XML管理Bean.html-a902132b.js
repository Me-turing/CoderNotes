const e=JSON.parse('{"key":"v-184bdd81","path":"/CoderNotes/02_%E5%88%9D%E7%BA%A7%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88/01_%E7%AC%AC%E4%B8%80%E9%98%B6%E6%AE%B5/05_%E5%9F%BA%E7%A1%80%E6%A1%86%E6%9E%B6/03_Spring%E5%9F%BA%E7%A1%80/02_%E5%9F%BA%E4%BA%8EXML%E7%AE%A1%E7%90%86Bean/%E5%9F%BA%E4%BA%8EXML%E7%AE%A1%E7%90%86Bean.html","title":"基于XML管理Bean","lang":"zh-CN","frontmatter":{"title":"基于XML管理Bean","icon":"file","order":1,"author":"十七","date":"2023-06-15 周四","category":["初级开发工程师"],"tag":["P5"],"sticky":true,"index":true,"description":"IOC:控制反转 代码 IOC底层原理浅析 简单来讲分为三步走策略 1. 解析XML配置文件 底层运用到了Dom4J的技术对于XML进行解析 ID 为 解析后对应的名字 Class 为需要注册成为Bean的类所在的全类路径 2. 反射技术实例化对象,放到容器中 通过反射获取指定路径的字节码文件 Class clazz =Class.forName(\\"c...","head":[["meta",{"property":"og:url","content":"https://meturing.gitee.io/coder-notes/coder-notes/CoderNotes/02_%E5%88%9D%E7%BA%A7%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88/01_%E7%AC%AC%E4%B8%80%E9%98%B6%E6%AE%B5/05_%E5%9F%BA%E7%A1%80%E6%A1%86%E6%9E%B6/03_Spring%E5%9F%BA%E7%A1%80/02_%E5%9F%BA%E4%BA%8EXML%E7%AE%A1%E7%90%86Bean/%E5%9F%BA%E4%BA%8EXML%E7%AE%A1%E7%90%86Bean.html"}],["meta",{"property":"og:title","content":"基于XML管理Bean"}],["meta",{"property":"og:description","content":"IOC:控制反转 代码 IOC底层原理浅析 简单来讲分为三步走策略 1. 解析XML配置文件 底层运用到了Dom4J的技术对于XML进行解析 ID 为 解析后对应的名字 Class 为需要注册成为Bean的类所在的全类路径 2. 反射技术实例化对象,放到容器中 通过反射获取指定路径的字节码文件 Class clazz =Class.forName(\\"c..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://meturing.gitee.io/coder-notes/coder-notes/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"基于XML管理Bean"}],["meta",{"property":"article:author","content":"十七"}],["meta",{"property":"article:tag","content":"P5"}],["meta",{"property":"article:published_time","content":"2023-06-14T16:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"基于XML管理Bean\\",\\"image\\":[\\"https://meturing.gitee.io/coder-notes/coder-notes/\\"],\\"datePublished\\":\\"2023-06-14T16:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"十七\\"}]}"]]},"headers":[{"level":2,"title":"IOC:控制反转","slug":"ioc-控制反转","link":"#ioc-控制反转","children":[{"level":3,"title":"代码","slug":"代码","link":"#代码","children":[]},{"level":3,"title":"IOC底层原理浅析","slug":"ioc底层原理浅析","link":"#ioc底层原理浅析","children":[]}]},{"level":2,"title":"DI : 依赖注入","slug":"di-依赖注入","link":"#di-依赖注入","children":[]},{"level":2,"title":"获取Bean对象","slug":"获取bean对象","link":"#获取bean对象","children":[{"level":3,"title":"常规使用","slug":"常规使用","link":"#常规使用","children":[]},{"level":3,"title":"单例与多例模式","slug":"单例与多例模式","link":"#单例与多例模式","children":[]},{"level":3,"title":"懒加载","slug":"懒加载","link":"#懒加载","children":[]}]},{"level":2,"title":"给Bean对象赋值","slug":"给bean对象赋值","link":"#给bean对象赋值","children":[{"level":3,"title":"property : 通过Set赋值","slug":"property-通过set赋值","link":"#property-通过set赋值","children":[]},{"level":3,"title":"constructor-arg : 通过全参构造赋值","slug":"constructor-arg-通过全参构造赋值","link":"#constructor-arg-通过全参构造赋值","children":[]},{"level":3,"title":"P标签 与 C标签","slug":"p标签-与-c标签","link":"#p标签-与-c标签","children":[]},{"level":3,"title":"特殊符号的处理","slug":"特殊符号的处理","link":"#特殊符号的处理","children":[]}]},{"level":2,"title":"Bean对象的引用","slug":"bean对象的引用","link":"#bean对象的引用","children":[{"level":3,"title":"引入内部的Bean","slug":"引入内部的bean","link":"#引入内部的bean","children":[]},{"level":3,"title":"级联的Bean","slug":"级联的bean","link":"#级联的bean","children":[]}]},{"level":2,"title":"集合的赋值","slug":"集合的赋值","link":"#集合的赋值","children":[{"level":3,"title":"常规对List的操作","slug":"常规对list的操作","link":"#常规对list的操作","children":[]},{"level":3,"title":"引入util声明集合","slug":"引入util声明集合","link":"#引入util声明集合","children":[]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":9.22,"words":2766},"filePathRelative":"CoderNotes/02_初级开发工程师/01_第一阶段/05_基础框架/03_Spring基础/02_基于XML管理Bean/基于XML管理Bean.md","localizedDate":"2023年6月15日","autoDesc":true,"excerpt":""}');export{e as data};
