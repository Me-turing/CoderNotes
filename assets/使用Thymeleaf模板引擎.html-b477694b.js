import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as t,o as p,c,d as n,e as a,b as e,w as d,f as s}from"./app-71f45f98.js";const u="/CoderNotes/assets/image-20230710091259551-0ceded4c.png",r="/CoderNotes/assets/image-20230710093032201-09cb0f6e.png",m="/CoderNotes/assets/image-20230710093514999-c0dbf98f.png",g="/CoderNotes/assets/image-20230710094606509-56b13f42.png",v="/CoderNotes/assets/image-20230710101258834-401c31c0.png",k="/CoderNotes/assets/image-20230710102343424-fcfd82ca.png",h="/CoderNotes/assets/image-20230710102812906-13169933.png",b="/CoderNotes/assets/image-20230710114403547-da537720.png",q="/CoderNotes/assets/image-20230710140846166-f557fabd.png",f="/CoderNotes/assets/image-20230710143456195-9fabecad.png",y="/CoderNotes/assets/image-20230710143503445-22b5acb2.png",x="/CoderNotes/assets/image-20230710143431474-96f3cfa2.png",w="/CoderNotes/assets/image-20230710141924740-fa1a973d.png",T="/CoderNotes/assets/image-20230710141940311-9f59c2fa.png",_="/CoderNotes/assets/image-20230710141956918-873b1c23.png",N="/CoderNotes/assets/image-20230710142520928-d3eadf6c.png",A="/CoderNotes/assets/image-20230710142538138-b85c7b75.png",C="/CoderNotes/assets/image-20230710142244642-af74a1ba.png",M={},E=s('<blockquote><p>写在前面 : Thymeleaf是MVC下的产物,需要SpringMVC的技术支持,将ModelAndView对象在视图解析器中解析成View对象并渲染给前端用户</p></blockquote><figure><img src="'+u+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="thymeleaf基本概念" tabindex="-1"><a class="header-anchor" href="#thymeleaf基本概念" aria-hidden="true">#</a> Thymeleaf基本概念</h2><h3 id="概念" tabindex="-1"><a class="header-anchor" href="#概念" aria-hidden="true">#</a> 概念</h3><p>Thymeleaf的主要目标是将优雅的自然模板带到开发工作流程中，并将HTML在浏览器中正确显示，并且可以作为静态原型，让开发团队能更容易地协作。Thymeleaf能够处理HTML，XML，JavaScript，CSS甚至纯文本。</p><p>长期以来,jsp在视图领域有非常重要的地位,随着时间的变迁,出现了一位新的挑战者:Thymeleaf,<strong>Thymeleaf是原生的</strong>,<strong>不依赖于标签库</strong>.它能够在接受原始HTML的地方进行编辑和渲染.因为它没有与Servelet规范耦合,因此Thymeleaf模板能进入jsp所无法涉足的领域。</p><p>Thymeleaf在Spring Boot项目中放入到resources/templates中。这个文件夹中的内容是无法通过浏览器URL直接访问的（和WEB-INF效果一样），所有Thymeleaf页面必须先走控制器。</p><h3 id="优势" tabindex="-1"><a class="header-anchor" href="#优势" aria-hidden="true">#</a> 优势</h3><ul><li>SpringBoot官方推荐使用的视图模板技术，和SpringBoot完美整合。</li><li>不经过服务器运算仍然可以直接查看原始值，对前端工程师更友好。</li></ul><h3 id="官方文档" tabindex="-1"><a class="header-anchor" href="#官方文档" aria-hidden="true">#</a> 官方文档</h3><p><a href="assets/Thymeleaf-3.0.11.pdf">官方文档</a></p><h2 id="快速体验thymeleaf" tabindex="-1"><a class="header-anchor" href="#快速体验thymeleaf" aria-hidden="true">#</a> 快速体验Thymeleaf</h2><h3 id="快速创建一个springboot项目" tabindex="-1"><a class="header-anchor" href="#快速创建一个springboot项目" aria-hidden="true">#</a> 快速创建一个SpringBoot项目</h3>',13),V=s(`<div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token comment">&lt;!--整合Mybatis--&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.mybatis.spring.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mybatis-spring-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.2.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>mysql<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mysql-connector-java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>8.0.21<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.projectlombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>lombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.18.26<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>provided<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
<span class="token comment">&lt;!--pagehelper分页插件--&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.github.pagehelper<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>pagehelper-spring-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.2.12<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>简单配置Mybatis依赖以及logback配置文件:</p><p>application.yml</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">spring</span><span class="token punctuation">:</span>
  <span class="token key atrule">datasource</span><span class="token punctuation">:</span>
    <span class="token key atrule">url</span><span class="token punctuation">:</span> jdbc<span class="token punctuation">:</span>mysql<span class="token punctuation">:</span>//xxx.xxx.xxx.xx<span class="token punctuation">:</span>3306/codernotes<span class="token punctuation">?</span>useSSL=false<span class="token important">&amp;useUnicode=true&amp;characterEncoding=UTF-8&amp;serverTimezone=Asia/Shanghai</span>
    <span class="token key atrule">driver-class-name</span><span class="token punctuation">:</span> com.mysql.cj.jdbc.Driver
    <span class="token key atrule">username</span><span class="token punctuation">:</span> CoderNotes
    <span class="token key atrule">password</span><span class="token punctuation">:</span> CoderNotes
<span class="token key atrule">server</span><span class="token punctuation">:</span>
  <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8080</span>
  <span class="token key atrule">servlet</span><span class="token punctuation">:</span>
    <span class="token key atrule">context-path</span><span class="token punctuation">:</span> /springboot05
<span class="token key atrule">mybatis</span><span class="token punctuation">:</span>
  <span class="token key atrule">type-aliases-package</span><span class="token punctuation">:</span> com.meturing.pojo <span class="token comment">#指定pojo的位置</span>
  <span class="token key atrule">mapper-locations</span><span class="token punctuation">:</span> classpath<span class="token punctuation">:</span>mapper/<span class="token important">*.xml</span>  <span class="token comment">#如果没有将Mapper与接口放到一起,可以使用该参数指定Mapper的位置</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>logback.xml</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 控制台输出 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Stdout<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ch.qos.logback.core.ConsoleAppender<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!-- 日志输出格式 --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>layout</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ch.qos.logback.classic.PatternLayout<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token comment">&lt;!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符--&gt;</span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pattern</span><span class="token punctuation">&gt;</span></span>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pattern</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>layout</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>appender</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 日志输出级别 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>root</span> <span class="token attr-name">level</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>info<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender-ref</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Stdout<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>root</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 指定包的日志级别 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>logger</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.meturing.mapper<span class="token punctuation">&quot;</span></span> <span class="token attr-name">level</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>DEBUG<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>logger</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="导入thymeleaf依赖" tabindex="-1"><a class="header-anchor" href="#导入thymeleaf依赖" aria-hidden="true">#</a> 导入Thymeleaf依赖</h3><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token comment">&lt;!--导入Thymeleaf相关依赖--&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-thymeleaf<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.4.5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="关于thymeleaf默认配置" tabindex="-1"><a class="header-anchor" href="#关于thymeleaf默认配置" aria-hidden="true">#</a> 关于Thymeleaf默认配置</h3><figure><img src="`+r+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="实现代码" tabindex="-1"><a class="header-anchor" href="#实现代码" aria-hidden="true">#</a> 实现代码</h3><h4 id="创建thymeleaf页面" tabindex="-1"><a class="header-anchor" href="#创建thymeleaf页面" aria-hidden="true">#</a> 创建Thymeleaf页面</h4><p>resources/templates/HelloThymeleaf.html</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>Hello Thymeleaf Page<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="创建controller" tabindex="-1"><a class="header-anchor" href="#创建controller" aria-hidden="true">#</a> 创建Controller</h4><p>com.meturing.controller.HelloThymeleafController.java</p><div class="language-Java line-numbers-mode" data-ext="Java"><pre class="language-Java"><code>@Controller
public class HelloThymeleafController {
    @RequestMapping(&quot;/HelloThymeleaf&quot;)
    public String helloThymeleaf(){
        return &quot;HelloThymeleaf&quot;;
    }
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="测试效果" tabindex="-1"><a class="header-anchor" href="#测试效果" aria-hidden="true">#</a> 测试效果</h3><p>我们看到,如果直接访问<code>http://localhost:8080/springboot05/HelloThymeleaf</code>页面打开<code>HelloThymeleaf.html</code>页面</p><figure><img src="`+m+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="thymeleaf基本使用" tabindex="-1"><a class="header-anchor" href="#thymeleaf基本使用" aria-hidden="true">#</a> Thymeleaf基本使用</h2><h3 id="th名称空间与基本概念" tabindex="-1"><a class="header-anchor" href="#th名称空间与基本概念" aria-hidden="true">#</a> th名称空间与基本概念</h3><figure><img src="'+g+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ol><li>标准变量表达式必须依赖标签,不能独立使用</li><li>标准变量表达式一般在开始标签中,以 th开头</li><li>语法为: <code>&lt;标签 th:属性名=&quot;\${参数key}&quot;&gt;文本&lt;/标签&gt;</code></li><li>表达式中可以通过<code>\${}</code>取出域中的值并放入标签的指定位置</li><li><code>\${}</code>在这里不能单独使用,必须在 th:后面的双引号里使用</li></ol><blockquote><p>注意 : 需要修改HTML中的声明空间 <code>&lt;html xmlns:th=&quot;http://www.thymeleaf.org&quot; &gt;</code></p></blockquote><h3 id="th名称框架的常见使用" tabindex="-1"><a class="header-anchor" href="#th名称框架的常见使用" aria-hidden="true">#</a> th名称框架的常见使用</h3><h4 id="基本属性控制" tabindex="-1"><a class="header-anchor" href="#基本属性控制" aria-hidden="true">#</a> 基本属性控制</h4><p>任何HTML标签原有的属性，前面加上『th:』就都可以通过Thymeleaf来设定新值</p><p>例如 :</p><ul><li>修改文本 : <code>&lt;p th:text=&quot;\${标签体新值}&quot;&gt;标签体原始值&lt;/p&gt;</code></li><li>修改属性 : <code>&lt;input type=&quot;text&quot; name=&quot;username&quot; th:value=&quot;\${文本框新值}&quot; value=&quot;文本框旧值&quot; /&gt;</code></li><li>解析URL : <code>&lt;a th:href=&quot;@{/index.html}&quot;&gt;访问index.html&lt;/a&gt;</code></li></ul><p>使用案例:</p><p>com.meturing.controller.Namespace01Controller.java</p><div class="language-Java line-numbers-mode" data-ext="Java"><pre class="language-Java"><code>@Controller
public class Namespace01Controller {
    @RequestMapping(&quot;/testNamespace01&quot;)
    public ModelAndView testNamespace01(){
        ModelAndView modelAndView = new ModelAndView();
        modelAndView.setViewName(&quot;Namespace01&quot;);
        Map&lt;String, Object&gt; model = modelAndView.getModel();
        model.put(&quot;sText&quot;, &quot;这是新文本&quot;);
        model.put(&quot;userName&quot;, &quot;这是新用户名&quot;);
        return modelAndView;
    }
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>resources/templates/Namespace01.html</p><div class="language-Html line-numbers-mode" data-ext="Html"><pre class="language-Html"><code>&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot; xmlns:th=&quot;http://www.thymeleaf.org&quot;&gt;
&lt;head&gt;
    &lt;meta charset=&quot;UTF-8&quot;&gt;
    &lt;title&gt;Title&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
修改文本 : &lt;p th:text=&quot;\${sText}&quot;&gt;原来的文本&lt;/p&gt;
&lt;hr /&gt;
修改属性 : &lt;input type=&quot;text&quot; name=&quot;userName&quot; value=&quot;root&quot; th:value=&quot;\${userName}&quot; disabled &gt;
&lt;hr /&gt;
解析URL : &lt;a th:href=&quot;@{/HelloThymeleaf}&quot;&gt;访问HelloThymeleaf&lt;/a&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+v+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><blockquote><p>使用Thymeleaf解析url地址<code>@{}</code>的作用是动态获取上下文路径（当前项目路径）</p></blockquote><h4 id="访问servlet并携带参数" tabindex="-1"><a class="header-anchor" href="#访问servlet并携带参数" aria-hidden="true">#</a> 访问Servlet并携带参数</h4><div class="language-Html line-numbers-mode" data-ext="Html"><pre class="language-Html"><code>&lt;a th:href=&quot;@{user(method=&#39;toRegisterPage&#39;)}&quot; class=&quot;register&quot;&gt;注册&lt;/a&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>@{user(method=&#39;toRegisterPage&#39;)</code> 表示访问：<code>http://localhost:8080/webday09/user?method=toRegisterPage</code></p><h4 id="th-if与th-unless" tabindex="-1"><a class="header-anchor" href="#th-if与th-unless" aria-hidden="true">#</a> th:if与th:unless</h4><p><code>th:if</code> : 如果它值为true 则显示标签<br><code>th:unless</code> : 如果它值为true 则不显示标签</p><p>com.meturing.controller.Namespace01Controller.java</p><div class="language-Java line-numbers-mode" data-ext="Java"><pre class="language-Java"><code>@Controller
public class Namespace01Controller {
    @RequestMapping(&quot;/testNamespace02&quot;)
    public ModelAndView testNamespace02(){
        ModelAndView modelAndView = new ModelAndView();
        modelAndView.setViewName(&quot;Namespace02&quot;);
        Map&lt;String, Object&gt; model = modelAndView.getModel();
        model.put(&quot;teacherList&quot;, &quot;zhangsan&quot;);
        return modelAndView;
    }
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>resources/templates/Namespace02.html</p><div class="language-Html line-numbers-mode" data-ext="Html"><pre class="language-Html"><code>&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot; xmlns:th=&quot;http://www.thymeleaf.org&quot;&gt;
&lt;head&gt;
    &lt;meta charset=&quot;UTF-8&quot;&gt;
    &lt;title&gt;Title&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;p th:if=&quot;\${#lists.isEmpty(teacherList)}&quot;&gt;没有数据&lt;/p&gt;
&lt;p th:if=&quot;\${not #lists.isEmpty(teacherList)}&quot;&gt;有数据&lt;/p&gt;
&lt;p th:unless=&quot;\${#lists.isEmpty(teacherList)}&quot;&gt;有数据&lt;/p&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>展示效果 :<br><img src="`+k+`" alt="" loading="lazy"></p><h4 id="th-switch" tabindex="-1"><a class="header-anchor" href="#th-switch" aria-hidden="true">#</a> th:switch</h4><p>com.meturing.controller.Namespace01Controller.java</p><div class="language-Java line-numbers-mode" data-ext="Java"><pre class="language-Java"><code>@Controller
public class Namespace01Controller {
    @RequestMapping(&quot;/testNamespace03&quot;)
    public ModelAndView testNamespace03(){
        ModelAndView modelAndView = new ModelAndView();
        modelAndView.setViewName(&quot;Namespace02&quot;);
        Map&lt;String, Object&gt; model = modelAndView.getModel();
        model.put(&quot;sex&quot;, &quot;man&quot;);
        return modelAndView;
    }
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>resources/templates/Namespace02.html</p><div class="language-Html line-numbers-mode" data-ext="Html"><pre class="language-Html"><code>&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot; xmlns:th=&quot;http://www.thymeleaf.org&quot;&gt;
&lt;head&gt;
    &lt;meta charset=&quot;UTF-8&quot;&gt;
    &lt;title&gt;Title&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;div th:switch=&quot;\${sex}&quot;&gt;
    &lt;p th:case=&quot;man&quot;&gt;男性&lt;/p&gt;
    &lt;p th:case=&quot;woman&quot;&gt;男性&lt;/p&gt;
&lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>展示效果 :<br><img src="`+h+`" alt="" loading="lazy"></p><h4 id="th-each" tabindex="-1"><a class="header-anchor" href="#th-each" aria-hidden="true">#</a> th:each</h4><p>类似于<code>vue中的v-for</code>对集合进行迭代遍历，每次遍历出来一条数据就添加一个标签<br> 语法 :<code> th:each=&quot;遍历出来的数据，数据的状态 ：要遍历的数据&quot;</code></p><p>status 表示遍历的状态 包含以下属性:</p><ol><li>index 遍历出来每一个元素的下标</li><li>count 遍历出来每一个元素的计数</li><li>size 遍历集合的长度</li><li>current 遍历出来的当前元素</li><li>even/odd 表示遍历出来的元素是否是奇数或者是否是偶数</li><li>first 表示遍历出来的元素是否是第一个</li><li>last 表示遍历出来的元素是否是最后一个</li></ol><p>com.meturing.controller.Namespace01Controller.java</p><div class="language-Java line-numbers-mode" data-ext="Java"><pre class="language-Java"><code>@Controller
public class Namespace01Controller {
	    @RequestMapping(&quot;/testNamespace04&quot;)
    public ModelAndView testNamespace04(){
        ModelAndView modelAndView = new ModelAndView();
        modelAndView.setViewName(&quot;Namespace03&quot;);
        Map&lt;String, Object&gt; model = modelAndView.getModel();
        ArrayList&lt;Teacher&gt; teaschers = new ArrayList&lt;&gt;();
        Teacher teacher1 = new Teacher(&quot;zhangsan&quot;, &quot;男&quot;, 35);
        Teacher teacher2 = new Teacher(&quot;lisi&quot;, &quot;男&quot;, 44);
        Teacher teacher3 = new Teacher(&quot;wanger&quot;, &quot;男&quot;, 32);
        Teacher teacher4 = new Teacher(&quot;mazi&quot;, &quot;男&quot;, 58);
        teaschers.add(teacher1);
        teaschers.add(teacher2);
        teaschers.add(teacher3);
        teaschers.add(teacher4);
        model.put(&quot;teaschers&quot;,teaschers);
        return modelAndView;
    }
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>resources/templates/Namespace03.html</p><div class="language-Html line-numbers-mode" data-ext="Html"><pre class="language-Html"><code>&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot; xmlns:th=&quot;http://www.thymeleaf.org&quot;&gt;
&lt;head&gt;
    &lt;meta charset=&quot;UTF-8&quot;&gt;
    &lt;title&gt;Title&lt;/title&gt;
    &lt;style&gt;
        th,td{
            border: solid 1px black;
        }
    &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;table cellpadding=&quot;0px&quot; cellspacing=&quot;0px&quot;&gt;
    &lt;thead&gt;
        &lt;th&gt;姓名&lt;/th&gt; &lt;th&gt;性别&lt;/th&gt; &lt;th&gt;年龄&lt;/th&gt;
        &lt;th&gt;下标&lt;/th&gt; &lt;th&gt;计数&lt;/th&gt; &lt;th&gt;长度&lt;/th&gt;
        &lt;th&gt;当前元素&lt;/th&gt; &lt;th&gt;是否偶数&lt;/th&gt; &lt;th&gt;是否奇数&lt;/th&gt;
        &lt;th&gt;是否第一个&lt;/th&gt; &lt;th&gt;是否最后一个&lt;/th&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;
        &lt;tr th:each=&quot;teacher,status : \${teaschers}&quot;&gt;
            &lt;td th:text=&quot;\${teacher.name}&quot;&gt;&lt;/td&gt;
            &lt;td th:text=&quot;\${teacher.sex}&quot;&gt;&lt;/td&gt;
            &lt;td th:text=&quot;\${teacher.age}&quot;&gt;&lt;/td&gt;
            &lt;td th:text=&quot;\${status.index}&quot;&gt;&lt;/td&gt;
            &lt;td th:text=&quot;\${status.count}&quot;&gt;&lt;/td&gt;
            &lt;td th:text=&quot;\${status.size}&quot;&gt;&lt;/td&gt;
            &lt;td th:text=&quot;\${status.current}&quot;&gt;&lt;/td&gt;
            &lt;td th:text=&quot;\${status.even}&quot;&gt;&lt;/td&gt;
            &lt;td th:text=&quot;\${status.odd}&quot;&gt;&lt;/td&gt;
            &lt;td th:text=&quot;\${status.first}&quot;&gt;&lt;/td&gt;
            &lt;td th:text=&quot;\${status.last}&quot;&gt;&lt;/td&gt;
        &lt;/tr&gt;
    &lt;/tbody&gt;
&lt;/table&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+b+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="th-onclick" tabindex="-1"><a class="header-anchor" href="#th-onclick" aria-hidden="true">#</a> th:onclick</h4><p>给元素绑定事件,单击事件并传递参数</p><p>写法1:仅仅支持数字和布尔类型参数的传递,字符串不支持</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>javascript:viod(0)<span class="token punctuation">&quot;</span></span>  <span class="token attr-name"><span class="token namespace">th:</span>onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&#39;</span>del(&#39;+\${emp.empno}+&#39;)&#39;<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>删除<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>写法2:支持数字和文本类型的参数传递</p><div class="language-Html line-numbers-mode" data-ext="Html"><pre class="language-Html"><code>&lt;a href=&quot;javascript:void(0)&quot; th:onclick=&quot;delEmp([[\${emp.empno}]],[[\${emp.ename}]])&quot;&gt;删除&lt;/a&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>com.meturing.controller.Namespace01Controller.java</p><div class="language-Java line-numbers-mode" data-ext="Java"><pre class="language-Java"><code>@Controller
public class Namespace01Controller {
    @RequestMapping(&quot;/testNamespace05&quot;)
    public ModelAndView testNamespace05(){
        ModelAndView modelAndView = new ModelAndView();
        modelAndView.setViewName(&quot;Namespace04&quot;);
        Map&lt;String, Object&gt; model = modelAndView.getModel();
        model.put(&quot;age&quot;,18);
        model.put(&quot;text&quot;,&quot;你好&quot;);
        model.put(&quot;name&quot;,&quot;zhangsan&quot;);
        return modelAndView;
    }
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>resources/templates/Namespace04.html</p><div class="language-Html line-numbers-mode" data-ext="Html"><pre class="language-Html"><code>&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot; xmlns:th=&quot;http://www.thymeleaf.org&quot;&gt;
&lt;head&gt;
    &lt;meta charset=&quot;UTF-8&quot;&gt;
    &lt;title&gt;Title&lt;/title&gt;
    &lt;link src=&quot;js/jquery-3.5.1.min.js&quot;/&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;a href=&quot;javascript:void(0)&quot;  th:onclick=&quot;&#39;shay(&#39;+\${age}+&#39;)&#39;&quot;&gt;点击继续&lt;/a&gt;
&lt;a href=&quot;javascript:void(0)&quot; th:onclick=&quot;add([[\${text}]],[[\${name}]])&quot;&gt;点击继续&lt;/a&gt;
&lt;/body&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
    function shay(age){
        alert(&quot;我今年:&quot;+age);
    }
    function add(text,name){
        alert(text+name);
    }
&lt;/script&gt;
&lt;/html&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>执行结果:<br><img src="`+q+'" alt="" loading="lazy"></p><blockquote><p>注意不要忘了导入JS</p></blockquote><h3 id="运算符" tabindex="-1"><a class="header-anchor" href="#运算符" aria-hidden="true">#</a> 运算符</h3><h2 id="域对象" tabindex="-1"><a class="header-anchor" href="#域对象" aria-hidden="true">#</a> 域对象</h2><h3 id="全局域-servletcontext" tabindex="-1"><a class="header-anchor" href="#全局域-servletcontext" aria-hidden="true">#</a> 全局域 ServletContext</h3><figure><img src="'+f+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="请求域-request-setattribute" tabindex="-1"><a class="header-anchor" href="#请求域-request-setattribute" aria-hidden="true">#</a> 请求域 request.setAttribute</h3><figure><img src="'+y+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="会话-session" tabindex="-1"><a class="header-anchor" href="#会话-session" aria-hidden="true">#</a> 会话 session</h3><figure><img src="'+x+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="内置对象" tabindex="-1"><a class="header-anchor" href="#内置对象" aria-hidden="true">#</a> 内置对象</h2><p>Thymeleaf提供了一些内置对象，内置对象可直接在模板中使用。这些对象是以#引用的。</p><p>使用内置对象的语法:</p><ol><li>引用内置对象需要使用#</li><li>大部分内置对象的名称都以s结尾。如：strings、numbers、dates</li><li>常见内置对象如下: <ol><li><code>#arrays</code>：数组操作的工具；</li><li><code>#aggregates</code>：操作数组或集合的工具；</li><li><code>#bools</code>：判断boolean类型的工具；</li><li><code>#calendars</code>：类似于<code>#dates</code>，但是是java.util.Calendar类的方法；</li><li><code>#ctx</code>：上下文对象，可以从中获取所有的thymeleaf内置对象；</li><li><code>#dates</code>：日期格式化内置对象，具体方法可以参照java.util.Date；</li><li><code>#numbers</code>： 数字格式化；#strings：字符串格式化，具体方法可以参照String，如startsWith、contains等；</li><li><code>#objects</code>：参照java.lang.Object；</li><li><code>#lists</code>：列表操作的工具，参照java.util.List；</li><li><code>#sets</code>：Set操作工具，参照java.util.Set；#maps：Map操作工具，参照java.util.Map；</li><li><code>#messages</code>：操作消息的工具。</li></ol></li></ol>',86),j={href:"https://www.thymeleaf.org/doc/tutorials/3.0/usingthymeleaf.html#number-literals",target:"_blank",rel:"noopener noreferrer"},H=s('<h3 id="基本内置对象" tabindex="-1"><a class="header-anchor" href="#基本内置对象" aria-hidden="true">#</a> 基本内置对象</h3><figure><img src="'+w+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>使用request对象<span class="token operator">--</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>p th<span class="token operator">:</span>text<span class="token operator">=</span><span class="token string">&quot;\${#request.getClass().getName()}&quot;</span><span class="token operator">&gt;</span>使用request对象所属类的全限定名<span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>p th<span class="token operator">:</span>text<span class="token operator">=</span><span class="token string">&quot;\${#request.getContextPath()}&quot;</span><span class="token operator">&gt;</span>使用request对象项目部署名<span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>p th<span class="token operator">:</span>text<span class="token operator">=</span><span class="token string">&quot;\${#request.getAttribute(&#39;username&#39;)}&quot;</span><span class="token operator">&gt;</span>使用request域对象项目部署名<span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>如果不清楚这个对象有哪些方法可以使用，那么就通过getClass().getName()获取全类名，再回到Java环境查看这个对象有哪些方法</strong></li><li>内置对象的方法可以直接调用</li><li>调用方法时需要传参的也可以直接传入参数</li></ul><h3 id="公共内置对象" tabindex="-1"><a class="header-anchor" href="#公共内置对象" aria-hidden="true">#</a> 公共内置对象</h3><figure><img src="`+T+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>lists内置对象<span class="token operator">--</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>p th<span class="token operator">:</span>text<span class="token operator">=</span><span class="token string">&quot;\${#lists.isEmpty(aNotEmptyList)}&quot;</span><span class="token operator">&gt;</span>判断aNotEmptyList这个key是否为空<span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>p th<span class="token operator">:</span>text<span class="token operator">=</span><span class="token string">&quot;\${#lists.isEmpty(anEmptyList)}&quot;</span><span class="token operator">&gt;</span>判断anEmptyList这个key是否为空<span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>公共内置对象的源码位置</p><figure><img src="`+_+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>接下来我们着重学习 <code>strings</code> <code>dates</code> <code>numbers</code></p><h4 id="strings对象" tabindex="-1"><a class="header-anchor" href="#strings对象" aria-hidden="true">#</a> strings对象</h4><figure><img src="'+N+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="dates对象" tabindex="-1"><a class="header-anchor" href="#dates对象" aria-hidden="true">#</a> dates对象</h4><figure><img src="'+A+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="numbers对象" tabindex="-1"><a class="header-anchor" href="#numbers对象" aria-hidden="true">#</a> numbers对象</h4><p><code>#numbers.formatDecimal(numbwe,整数位,整数位千分位标识符,小数位,小数位表示符)</code></p><p>例如:<code>${#numbers.formatDecimal(num,1,&amp;apos;COMMA&amp;apos;,2,&amp;apos;POINT&amp;apos;)}</code><br> 其中 : 1表示整数位至少一位，不足以0补齐，如：num = 0.00，2表示小数点后有两位</p><p>关于整数位的区别如下:<br><code>${#numbers.formatDecimal(num,0,&amp;apos;COMMA&amp;apos;,2,&amp;apos;POINT&amp;apos;)}则显示 .00</code><br><code>${#numbers.formatDecimal(num,1,&amp;apos;COMMA&amp;apos;,2,&amp;apos;POINT&amp;apos;)}则显示 0.00</code></p><h2 id="包含其他页面模板" tabindex="-1"><a class="header-anchor" href="#包含其他页面模板" aria-hidden="true">#</a> 包含其他页面模板</h2><figure><img src="'+C+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="创建模板" tabindex="-1"><a class="header-anchor" href="#创建模板" aria-hidden="true">#</a> 创建模板</h3><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">th:</span>fragment</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>模板名称<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>被抽取出来的头部内容<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="使用模板" tabindex="-1"><a class="header-anchor" href="#使用模板" aria-hidden="true">#</a> 使用模板</h3><table><thead><tr><th>语法</th><th>效果</th><th>特点</th></tr></thead><tbody><tr><td>th:insert</td><td>把目标的代码片段整个插入到当前标签内部</td><td>它会保留页面自身的标签</td></tr><tr><td>th:replace</td><td>用目标的代码替换当前标签</td><td>它不会保留页面自身的标签</td></tr><tr><td>th:include</td><td>把目标的代码片段去除最外层标签，然后再插入到当前标签内部</td><td>它会去掉片段外层标记，同时保留页面自身标记</td></tr></tbody></table><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!-- 代码片段所在页面的逻辑视图 :: 代码片段的名称 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>badBoy<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">th:</span>insert</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>segment :: header<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    div标签的原始内容
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>worseBoy<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">th:</span>replace</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>segment :: header<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    div标签的原始内容
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>worstBoy<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">th:</span>include</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>segment :: header<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    div标签的原始内容
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,25);function $(B,S){const l=t("RouterLink"),i=t("ExternalLinkIcon");return p(),c("div",null,[E,n("p",null,[a("创建Springboot项目详见 : "),e(l,{to:"/doc/02_%E5%88%9D%E7%BA%A7%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88/01_%E7%AC%AC%E4%B8%80%E9%98%B6%E6%AE%B5/05_%E5%9F%BA%E7%A1%80%E6%A1%86%E6%9E%B6/05_SpringBoot/02_SpringBoot%E5%BF%AB%E9%80%9F%E9%83%A8%E7%BD%B2/SpringBoot%E5%BF%AB%E9%80%9F%E9%83%A8%E7%BD%B2.html#%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2"},{default:d(()=>[a("自动部署")]),_:1})]),V,n("p",null,[a("具体可参考 : "),n("a",j,[a("官方文档"),e(i)])]),H])}const z=o(M,[["render",$],["__file","使用Thymeleaf模板引擎.html.vue"]]);export{z as default};
