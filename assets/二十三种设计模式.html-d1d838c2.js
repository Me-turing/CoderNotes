import{_ as h}from"./plugin-vue_export-helper-c27b6911.js";import{r as t,o,c as r,d as E,b as a,w as B,f as d,e as A}from"./app-71f45f98.js";const n={},_=d('<h2 id="创建型模式-5种" tabindex="-1"><a class="header-anchor" href="#创建型模式-5种" aria-hidden="true">#</a> 创建型模式(5种)</h2><p>创建型模式主要解决<strong>对象的创建问题</strong>,封装复杂的创建过程,解耦对象的创建代码和使用代码.</p><h3 id="常用模式" tabindex="-1"><a class="header-anchor" href="#常用模式" aria-hidden="true">#</a> 常用模式</h3><h4 id="单例模式" tabindex="-1"><a class="header-anchor" href="#单例模式" aria-hidden="true">#</a> 单例模式</h4><blockquote><p>单例模式用来创建全局唯一对象</p></blockquote>',5),i=E("h4",{id:"工厂模式",tabindex:"-1"},[E("a",{class:"header-anchor",href:"#工厂模式","aria-hidden":"true"},"#"),A(" 工厂模式")],-1),c=E("blockquote",null,[E("p",null,"工厂模式用来创建不同但是相关类型的对象(继承同一父类或者接口的一组子类),由给定的参数来决定创建哪种类型的对象.")],-1),l=E("p",null,"包含 : 简单工厂模式 / 工厂方法模式 / 抽象工厂模式",-1),s=E("h4",{id:"建造者模式",tabindex:"-1"},[E("a",{class:"header-anchor",href:"#建造者模式","aria-hidden":"true"},"#"),A(" 建造者模式")],-1),u=E("blockquote",null,[E("p",null,"建造者模式是用来创建复杂对象,可以通过设置不同的可选参数,定制化地创建不同的对象.")],-1),C=E("h3",{id:"不常用模式",tabindex:"-1"},[E("a",{class:"header-anchor",href:"#不常用模式","aria-hidden":"true"},"#"),A(" 不常用模式")],-1),F=E("h4",{id:"原型模式",tabindex:"-1"},[E("a",{class:"header-anchor",href:"#原型模式","aria-hidden":"true"},"#"),A(" 原型模式")],-1),f=E("blockquote",null,[E("p",null,"原型模式针对创建成本比较大的对象,利用对已有对象进行复制的方式进行创建,以达到节省创建时间的目的.")],-1),p=d('<h2 id="结构型模式-7种" tabindex="-1"><a class="header-anchor" href="#结构型模式-7种" aria-hidden="true">#</a> 结构型模式(7种)</h2><p>一共包括七种：代理模式、桥接模式、装饰者模式、适配器模式、门面(外观)模式、组合模式、和享元模式。</p><blockquote><p><strong>代理、桥接、装饰器、适配器 4 种设计模式的区别</strong>:<br> 代理、桥接、装饰器、适配器，这 4 种模式是比较常用的结构型设计模式。它们的代码结构非常相似.但其各自的用意却不同,简单说一下它们之间的关系</p><ol><li>代理模式：代理模式在不改变原始类接口的条件下，为原始类定义一个代理类，主要目的是控制访问，而非加强功能，这是它跟装饰器模式最大的不同。</li><li>桥接模式：桥接模式的目的是将接口部分和实现部分分离，从而让它们可以较为容易、也相对独立地加以改变。</li><li>装饰器模式：装饰者模式在不改变原始类接口的情况下，对原始类功能进行增强，并且支持多个装饰器的嵌套使用。</li><li>适配器模式：将一个类的接口转换为客户希望的另一个接口.适配器模式让那些不兼容的类可以一起工作.</li></ol></blockquote><h3 id="代理模式" tabindex="-1"><a class="header-anchor" href="#代理模式" aria-hidden="true">#</a> 代理模式</h3><blockquote><p>代理模式在客户端与目标对象之间起到一个中介作用和保护目标对象的作用,可以拓展目标类</p></blockquote>',5),b=E("h3",{id:"桥接模式",tabindex:"-1"},[E("a",{class:"header-anchor",href:"#桥接模式","aria-hidden":"true"},"#"),A(" 桥接模式")],-1),D=E("blockquote",null,[E("p",null,"桥接模式用一种巧妙的方式处理多层继承存在的问题,用抽象关联来取代传统的多层继承,将类之间的静态继承关系转变为动态的组合关系,使得系统更加灵活,并易于扩展,有效的控制了系统中类的个数 (避免了继承层次的指数级爆炸).")],-1),x=E("h3",{id:"装饰者模式",tabindex:"-1"},[E("a",{class:"header-anchor",href:"#装饰者模式","aria-hidden":"true"},"#"),A(" 装饰者模式")],-1),m=E("blockquote",null,[E("p",null,"动态的给一个对象添加一些额外的职责. 就扩展功能而言,装饰器模式提供了一种比使用子类更加灵活的替代方案.")],-1),k=E("h3",{id:"适配器模式",tabindex:"-1"},[E("a",{class:"header-anchor",href:"#适配器模式","aria-hidden":"true"},"#"),A(" 适配器模式")],-1),q=E("blockquote",null,[E("p",null,"将类的接口转换为客户期望的另一个接口，适配器可以让不兼容的两个类一起协同工作")],-1),g=E("h3",{id:"门面-外观-模式",tabindex:"-1"},[E("a",{class:"header-anchor",href:"#门面-外观-模式","aria-hidden":"true"},"#"),A(" 门面(外观)模式")],-1),N=E("blockquote",null,[E("p",null,"为子系统中的一组接口提供统一的接口。它定义了一个更高级别的接口，使子系统更易于使用")],-1),V=E("h3",{id:"组合模式",tabindex:"-1"},[E("a",{class:"header-anchor",href:"#组合模式","aria-hidden":"true"},"#"),A(" 组合模式")],-1),v=E("blockquote",null,[E("p",null,"将对象组合成树形结构以表示整个部分的层次结构.组合模式可以让用户统一对待单个对象和对象的组合")],-1),w=E("h3",{id:"享元模式",tabindex:"-1"},[E("a",{class:"header-anchor",href:"#享元模式","aria-hidden":"true"},"#"),A(" 享元模式")],-1),L=E("blockquote",null,[E("p",null,"摒弃了在每个对象中保存所有数据的方式，通过共享多个对象所共有的相同状态，从而让我们能在有限的内存容量中载入更多对象")],-1),R=d('<h2 id="行为模式-11种" tabindex="-1"><a class="header-anchor" href="#行为模式-11种" aria-hidden="true">#</a> 行为模式(11种)</h2><p><strong>行为型模式用于描述程序在运行时复杂的流程控制</strong>，即描述多个类或对象之间怎样相互协作共同完成单个对象都无法单独完成的任务，它涉及算法与对象间职责的分配。</p><p>行为型模式分为<strong>类行为模式</strong>和<strong>对象行为模式</strong>，前者采用继承机制来在类间分派行为，后者采用组合或聚合在对象间分配行为。由于组合关系或聚合关系比继承关系耦合度低，满足“合成复用原则”，所以对象行为模式比类行为模式具有更大的灵活性。</p><p>类行为模式 : <code>模板方法模式</code> / <code>解释器模式</code></p><p>对象行为模式 : <code>观察者模式</code> / <code>策略模式</code> / <code>职责链模式</code> / <code>状态模式</code> / <code>命令模式</code> / <code>中介者模式</code> / <code>迭代器模式</code> / <code>访问者模式</code> / <code>备忘录模式</code></p><h3 id="模板方法模式" tabindex="-1"><a class="header-anchor" href="#模板方法模式" aria-hidden="true">#</a> 模板方法模式</h3><h3 id="解释器模式" tabindex="-1"><a class="header-anchor" href="#解释器模式" aria-hidden="true">#</a> 解释器模式</h3><h3 id="观察者模式" tabindex="-1"><a class="header-anchor" href="#观察者模式" aria-hidden="true">#</a> 观察者模式</h3><h3 id="策略模式" tabindex="-1"><a class="header-anchor" href="#策略模式" aria-hidden="true">#</a> 策略模式</h3><h3 id="职责链模式" tabindex="-1"><a class="header-anchor" href="#职责链模式" aria-hidden="true">#</a> 职责链模式</h3><h3 id="状态模式" tabindex="-1"><a class="header-anchor" href="#状态模式" aria-hidden="true">#</a> 状态模式</h3><h3 id="命令模式" tabindex="-1"><a class="header-anchor" href="#命令模式" aria-hidden="true">#</a> 命令模式</h3><h3 id="中介者模式" tabindex="-1"><a class="header-anchor" href="#中介者模式" aria-hidden="true">#</a> 中介者模式</h3><h3 id="迭代器模式" tabindex="-1"><a class="header-anchor" href="#迭代器模式" aria-hidden="true">#</a> 迭代器模式</h3><h3 id="访问者模式" tabindex="-1"><a class="header-anchor" href="#访问者模式" aria-hidden="true">#</a> 访问者模式</h3><h3 id="备忘录模式" tabindex="-1"><a class="header-anchor" href="#备忘录模式" aria-hidden="true">#</a> 备忘录模式</h3>',16);function S(T,j){const e=t("RouterLink");return o(),r("div",null,[_,E("p",null,[a(e,{to:"/doc/02_%E5%88%9D%E7%BA%A7%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88/01_%E7%AC%AC%E4%B8%80%E9%98%B6%E6%AE%B5/06_%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/02_%E4%BA%8C%E5%8D%81%E4%B8%89%E7%A7%8D%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/01_%E5%88%9B%E5%BB%BA%E5%9E%8B%E6%A8%A1%E5%BC%8F/01_%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F.html"},{default:B(()=>[A("01_单例模式")]),_:1})]),i,c,l,E("p",null,[a(e,{to:"/doc/02_%E5%88%9D%E7%BA%A7%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88/01_%E7%AC%AC%E4%B8%80%E9%98%B6%E6%AE%B5/06_%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/02_%E4%BA%8C%E5%8D%81%E4%B8%89%E7%A7%8D%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/01_%E5%88%9B%E5%BB%BA%E5%9E%8B%E6%A8%A1%E5%BC%8F/02_%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F.html"},{default:B(()=>[A("02_工厂模式")]),_:1})]),s,u,E("p",null,[a(e,{to:"/doc/02_%E5%88%9D%E7%BA%A7%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88/01_%E7%AC%AC%E4%B8%80%E9%98%B6%E6%AE%B5/06_%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/02_%E4%BA%8C%E5%8D%81%E4%B8%89%E7%A7%8D%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/01_%E5%88%9B%E5%BB%BA%E5%9E%8B%E6%A8%A1%E5%BC%8F/03_%E5%BB%BA%E9%80%A0%E8%80%85%E6%A8%A1%E5%BC%8F.html"},{default:B(()=>[A("03_建造者模式")]),_:1})]),C,F,f,E("p",null,[a(e,{to:"/doc/02_%E5%88%9D%E7%BA%A7%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88/01_%E7%AC%AC%E4%B8%80%E9%98%B6%E6%AE%B5/06_%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/02_%E4%BA%8C%E5%8D%81%E4%B8%89%E7%A7%8D%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/01_%E5%88%9B%E5%BB%BA%E5%9E%8B%E6%A8%A1%E5%BC%8F/04_%E5%8E%9F%E5%9E%8B%E6%A8%A1%E5%BC%8F.html"},{default:B(()=>[A("04_原型模式")]),_:1})]),p,E("p",null,[a(e,{to:"/doc/02_%E5%88%9D%E7%BA%A7%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88/01_%E7%AC%AC%E4%B8%80%E9%98%B6%E6%AE%B5/06_%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/02_%E4%BA%8C%E5%8D%81%E4%B8%89%E7%A7%8D%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/02_%E7%BB%93%E6%9E%84%E5%9E%8B%E6%A8%A1%E5%BC%8F/05_%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F.html"},{default:B(()=>[A("05_代理模式")]),_:1})]),b,D,E("p",null,[a(e,{to:"/doc/02_%E5%88%9D%E7%BA%A7%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88/01_%E7%AC%AC%E4%B8%80%E9%98%B6%E6%AE%B5/06_%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/02_%E4%BA%8C%E5%8D%81%E4%B8%89%E7%A7%8D%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/02_%E7%BB%93%E6%9E%84%E5%9E%8B%E6%A8%A1%E5%BC%8F/06_%E6%A1%A5%E6%8E%A5%E6%A8%A1%E5%BC%8F.html"},{default:B(()=>[A("06_桥接模式")]),_:1})]),x,m,E("p",null,[a(e,{to:"/doc/02_%E5%88%9D%E7%BA%A7%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88/01_%E7%AC%AC%E4%B8%80%E9%98%B6%E6%AE%B5/06_%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/02_%E4%BA%8C%E5%8D%81%E4%B8%89%E7%A7%8D%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/02_%E7%BB%93%E6%9E%84%E5%9E%8B%E6%A8%A1%E5%BC%8F/07_%E8%A3%85%E9%A5%B0%E5%99%A8%E6%A8%A1%E5%BC%8F.html"},{default:B(()=>[A("07_装饰器模式")]),_:1})]),k,q,E("p",null,[a(e,{to:"/doc/02_%E5%88%9D%E7%BA%A7%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88/01_%E7%AC%AC%E4%B8%80%E9%98%B6%E6%AE%B5/06_%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/02_%E4%BA%8C%E5%8D%81%E4%B8%89%E7%A7%8D%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/02_%E7%BB%93%E6%9E%84%E5%9E%8B%E6%A8%A1%E5%BC%8F/08_%E9%80%82%E9%85%8D%E5%99%A8%E6%A8%A1%E5%BC%8F.html"},{default:B(()=>[A("08_适配器模式")]),_:1})]),g,N,E("p",null,[a(e,{to:"/doc/02_%E5%88%9D%E7%BA%A7%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88/01_%E7%AC%AC%E4%B8%80%E9%98%B6%E6%AE%B5/06_%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/02_%E4%BA%8C%E5%8D%81%E4%B8%89%E7%A7%8D%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/02_%E7%BB%93%E6%9E%84%E5%9E%8B%E6%A8%A1%E5%BC%8F/09_%E5%A4%96%E8%A7%82%E6%A8%A1%E5%BC%8F.html"},{default:B(()=>[A("09_外观模式")]),_:1})]),V,v,E("p",null,[a(e,{to:"/doc/02_%E5%88%9D%E7%BA%A7%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88/01_%E7%AC%AC%E4%B8%80%E9%98%B6%E6%AE%B5/06_%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/02_%E4%BA%8C%E5%8D%81%E4%B8%89%E7%A7%8D%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/02_%E7%BB%93%E6%9E%84%E5%9E%8B%E6%A8%A1%E5%BC%8F/10_%E7%BB%84%E5%90%88%E6%A8%A1%E5%BC%8F.html"},{default:B(()=>[A("10_组合模式")]),_:1})]),w,L,E("p",null,[a(e,{to:"/doc/02_%E5%88%9D%E7%BA%A7%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88/01_%E7%AC%AC%E4%B8%80%E9%98%B6%E6%AE%B5/06_%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/02_%E4%BA%8C%E5%8D%81%E4%B8%89%E7%A7%8D%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/02_%E7%BB%93%E6%9E%84%E5%9E%8B%E6%A8%A1%E5%BC%8F/11_%E4%BA%AB%E5%85%83%E6%A8%A1%E5%BC%8F.html"},{default:B(()=>[A("11_享元模式")]),_:1})]),R])}const G=h(n,[["render",S],["__file","二十三种设计模式.html.vue"]]);export{G as default};
