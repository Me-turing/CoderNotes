const e=JSON.parse('{"key":"v-5d1306a2","path":"/doc/02_%E5%88%9D%E7%BA%A7%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88/01_%E7%AC%AC%E4%B8%80%E9%98%B6%E6%AE%B5/06_%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/02_%E4%BA%8C%E5%8D%81%E4%B8%89%E7%A7%8D%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/02_%E7%BB%93%E6%9E%84%E5%9E%8B%E6%A8%A1%E5%BC%8F/10_%E7%BB%84%E5%90%88%E6%A8%A1%E5%BC%8F.html","title":"10_组合模式","lang":"zh-CN","frontmatter":{"title":"10_组合模式","icon":"file","order":1,"author":"十七","date":"2023-10-10 周二","category":["初级开发工程师"],"tags":["P5"],"sticky":true,"index":true,"description":"概览 我们很容易将“组合模式”和“组合关系”搞混。组合模式最初只是用于解决树形结构的场景，更多的是处理对象组织结构之间的问题。而组合关系则是通过将不同对象封装起来完成一个统一功能. 组合模式(Composite Pattern) 的定义是：将对象组合成树形结构以表示整个部分的层次结构.组合模式可以让用户统一对待单个对象和对象的组合 比如: window...","head":[["meta",{"property":"og:url","content":"https://me-turing.github.io/CoderNotes/CoderNotes/doc/02_%E5%88%9D%E7%BA%A7%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88/01_%E7%AC%AC%E4%B8%80%E9%98%B6%E6%AE%B5/06_%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/02_%E4%BA%8C%E5%8D%81%E4%B8%89%E7%A7%8D%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/02_%E7%BB%93%E6%9E%84%E5%9E%8B%E6%A8%A1%E5%BC%8F/10_%E7%BB%84%E5%90%88%E6%A8%A1%E5%BC%8F.html"}],["meta",{"property":"og:title","content":"10_组合模式"}],["meta",{"property":"og:description","content":"概览 我们很容易将“组合模式”和“组合关系”搞混。组合模式最初只是用于解决树形结构的场景，更多的是处理对象组织结构之间的问题。而组合关系则是通过将不同对象封装起来完成一个统一功能. 组合模式(Composite Pattern) 的定义是：将对象组合成树形结构以表示整个部分的层次结构.组合模式可以让用户统一对待单个对象和对象的组合 比如: window..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-11T01:18:16.000Z"}],["meta",{"property":"article:author","content":"十七"}],["meta",{"property":"article:tag","content":"P5"}],["meta",{"property":"article:published_time","content":"2023-10-10T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-10-11T01:18:16.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"10_组合模式\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-10-10T00:00:00.000Z\\",\\"dateModified\\":\\"2023-10-11T01:18:16.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"十七\\"}]}"]]},"headers":[{"level":2,"title":"概览","slug":"概览","link":"#概览","children":[]},{"level":2,"title":"原理","slug":"原理","link":"#原理","children":[{"level":3,"title":"UML图","slug":"uml图","link":"#uml图","children":[]},{"level":3,"title":"角色","slug":"角色","link":"#角色","children":[]}]},{"level":2,"title":"实现","slug":"实现","link":"#实现","children":[{"level":3,"title":"抽象根节点（Component）","slug":"抽象根节点-component","link":"#抽象根节点-component","children":[]},{"level":3,"title":"叶子节点(Leaf)","slug":"叶子节点-leaf","link":"#叶子节点-leaf","children":[]},{"level":3,"title":"树枝节点(Composite)","slug":"树枝节点-composite","link":"#树枝节点-composite","children":[]}]},{"level":2,"title":"应用","slug":"应用","link":"#应用","children":[]},{"level":2,"title":"分类","slug":"分类","link":"#分类","children":[{"level":3,"title":"透明组合模式","slug":"透明组合模式","link":"#透明组合模式","children":[]},{"level":3,"title":"安全组合模式","slug":"安全组合模式","link":"#安全组合模式","children":[]}]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[{"level":3,"title":"优点","slug":"优点","link":"#优点","children":[]},{"level":3,"title":"缺点","slug":"缺点","link":"#缺点","children":[]},{"level":3,"title":"场景","slug":"场景","link":"#场景","children":[]}]}],"git":{"createdTime":1696987096000,"updatedTime":1696987096000,"contributors":[{"name":"SEVENTEEN","email":"2339989978@qq.com","commits":1}]},"readingTime":{"minutes":8.21,"words":2463},"filePathRelative":"doc/02_初级开发工程师/01_第一阶段/06_设计模式/02_二十三种设计模式/02_结构型模式/10_组合模式.md","localizedDate":"2023年10月10日","autoDesc":true,"excerpt":""}');export{e as data};
