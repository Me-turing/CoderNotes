import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as l,c,d as s,e as n,b as t,w as p,f as a}from"./app-71f45f98.js";const r="/CoderNotes/assets/image-20230705170247417-38d279e7.png",u="/CoderNotes/assets/image-20230705172331743-2d6c69e1.png",d="/CoderNotes/assets/image-20230705170722913-16de1836.png",k="/CoderNotes/assets/image-20230705170700872-2475b5af.png",v="/CoderNotes/assets/image-20230705170634653-d2a354e9.png",m="/CoderNotes/assets/image-20230705171752842-6c751359.png",g="/CoderNotes/assets/image-20230705172252886-f58e610e.png",b="/CoderNotes/assets/image-20230705173257181-483b9691.png",y="/CoderNotes/assets/image-20230705173641736-48ee6c53.png",L="/CoderNotes/assets/image-20230705173849451-7f186f5a.png",f="/CoderNotes/assets/image-20230706143445671-b24843a3.png",U={},h=a(`<p>在前面的学习中我们看到了SpringBoot快速部署对我们开发的简化,接下来我们将学习整合第三方组件并对其进行个性化配置,如:Mybatis / logback / pageHelper / Druid / JSP / Thymeleaf 的整合操作</p><p>开始之前我们需要准备数据环境 :</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 客户信息表</span>
<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">\`</span>userinfo<span class="token punctuation">\`</span></span> <span class="token punctuation">(</span>
  <span class="token identifier"><span class="token punctuation">\`</span>id<span class="token punctuation">\`</span></span> <span class="token keyword">int</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span>
  <span class="token identifier"><span class="token punctuation">\`</span>name<span class="token punctuation">\`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span> <span class="token keyword">COLLATE</span> utf8mb4_general_ci <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>
  <span class="token identifier"><span class="token punctuation">\`</span>password<span class="token punctuation">\`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span> <span class="token keyword">COLLATE</span> utf8mb4_general_ci <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>
  <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">\`</span>id<span class="token punctuation">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">InnoDB</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token operator">=</span><span class="token number">12</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8mb4 <span class="token keyword">COLLATE</span><span class="token operator">=</span>utf8mb4_general_ci <span class="token keyword">COMMENT</span><span class="token operator">=</span><span class="token string">&#39;用户信息表&#39;</span><span class="token punctuation">;</span>
    <span class="token keyword">comment</span> <span class="token string">&#39;用户信息表&#39;</span><span class="token punctuation">;</span>
<span class="token comment">-- 初始化的数据</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> userinfo <span class="token punctuation">(</span>id<span class="token punctuation">,</span> name<span class="token punctuation">,</span> password<span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;root1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;123456&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> userinfo <span class="token punctuation">(</span>id<span class="token punctuation">,</span> name<span class="token punctuation">,</span> password<span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;root2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;123456&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> userinfo <span class="token punctuation">(</span>id<span class="token punctuation">,</span> name<span class="token punctuation">,</span> password<span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">&#39;root3&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;123456&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> userinfo <span class="token punctuation">(</span>id<span class="token punctuation">,</span> name<span class="token punctuation">,</span> password<span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token string">&#39;root4&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;123456&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> userinfo <span class="token punctuation">(</span>id<span class="token punctuation">,</span> name<span class="token punctuation">,</span> password<span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token string">&#39;root5&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;root5&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> userinfo <span class="token punctuation">(</span>id<span class="token punctuation">,</span> name<span class="token punctuation">,</span> password<span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token string">&#39;root6&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;root6&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> userinfo <span class="token punctuation">(</span>id<span class="token punctuation">,</span> name<span class="token punctuation">,</span> password<span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token string">&#39;root7&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;root7&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> userinfo <span class="token punctuation">(</span>id<span class="token punctuation">,</span> name<span class="token punctuation">,</span> password<span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token string">&#39;root8&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;root8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> userinfo <span class="token punctuation">(</span>id<span class="token punctuation">,</span> name<span class="token punctuation">,</span> password<span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">,</span> <span class="token string">&#39;root9&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;root9&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> userinfo <span class="token punctuation">(</span>id<span class="token punctuation">,</span> name<span class="token punctuation">,</span> password<span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token string">&#39;root10&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;root10&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> userinfo <span class="token punctuation">(</span>id<span class="token punctuation">,</span> name<span class="token punctuation">,</span> password<span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">,</span> <span class="token string">&#39;root11&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;root11&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="整合mybatis" tabindex="-1"><a class="header-anchor" href="#整合mybatis" aria-hidden="true">#</a> 整合Mybatis</h2><h3 id="导入依赖" tabindex="-1"><a class="header-anchor" href="#导入依赖" aria-hidden="true">#</a> 导入依赖</h3><p>与之前一样,我们需要导入Mybatis的相关依赖,不过在SpringBoot中我们直接导入<code>mybatis-spring-boot-starter</code>启动器</p><div class="language-XML line-numbers-mode" data-ext="XML"><pre class="language-XML"><code>&lt;!--整合Mybatis--&gt;
&lt;dependency&gt;
	&lt;groupId&gt;org.mybatis.spring.boot&lt;/groupId&gt;
	&lt;artifactId&gt;mybatis-spring-boot-starter&lt;/artifactId&gt;
	&lt;version&gt;2.1.3&lt;/version&gt;
&lt;/dependency&gt;
&lt;dependency&gt;
	&lt;groupId&gt;mysql&lt;/groupId&gt;
	&lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;
	&lt;version&gt;8.0.21&lt;/version&gt;
&lt;/dependency&gt;
&lt;dependency&gt;
	&lt;groupId&gt;org.projectlombok&lt;/groupId&gt;
	&lt;artifactId&gt;lombok&lt;/artifactId&gt;
	&lt;version&gt;1.18.12&lt;/version&gt;
	&lt;scope&gt;provided&lt;/scope&gt;
&lt;/dependency&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="修改application-yal文件" tabindex="-1"><a class="header-anchor" href="#修改application-yal文件" aria-hidden="true">#</a> 修改application.yal文件</h3><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">spring</span><span class="token punctuation">:</span>
  <span class="token key atrule">datasource</span><span class="token punctuation">:</span>
    <span class="token key atrule">url</span><span class="token punctuation">:</span> jdbc<span class="token punctuation">:</span>mysql<span class="token punctuation">:</span>//xxx.xxx.xxx.xx<span class="token punctuation">:</span>3306/xxxxxx<span class="token punctuation">?</span>useSSL=false<span class="token important">&amp;useUnicode=true&amp;characterEncoding=UTF-8&amp;serverTimezone=Asia/Shanghai</span>
    <span class="token key atrule">driver-class-name</span><span class="token punctuation">:</span> com.mysql.cj.jdbc.Driver
    <span class="token key atrule">username</span><span class="token punctuation">:</span> xxxxx
    <span class="token key atrule">password</span><span class="token punctuation">:</span> xxxxx
<span class="token key atrule">server</span><span class="token punctuation">:</span>
  <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8081</span>
  <span class="token key atrule">servlet</span><span class="token punctuation">:</span>
    <span class="token key atrule">context-path</span><span class="token punctuation">:</span> /springboot03
<span class="token key atrule">mybatis</span><span class="token punctuation">:</span>
  <span class="token key atrule">type-aliases-package</span><span class="token punctuation">:</span> com.meturing.pojo <span class="token comment">#指定pojo的位置</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="实现功能" tabindex="-1"><a class="header-anchor" href="#实现功能" aria-hidden="true">#</a> 实现功能</h3><p>我们快速编写一个查询所有用户信息的接口<br><img src="`+r+`" alt="" loading="lazy"></p><p>com.meturing.pojo.UserInfo.java</p><div class="language-Java line-numbers-mode" data-ext="Java"><pre class="language-Java"><code>@Data
@AllArgsConstructor
@NoArgsConstructor
@ToString
public class UserInfo implements Serializable {
	private Integer id;
    private String name;
    private String password;
    private static final long serialVersionUID = 1L;
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>com.meturing.controller.UserInfoController.java</p><div class="language-Java line-numbers-mode" data-ext="Java"><pre class="language-Java"><code>@RestController
public class UserInfoController {
    @Autowired
    private UserInfoService userInfoService;
    @RequestMapping(&quot;/getAllUsersList&quot;)
    public List&lt;UserInfo&gt; getAllUsersList(){
        return userInfoService.getAllUsersList();
    }
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>com.meturing.service.UserInfoService.java</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UserInfoService</span> <span class="token punctuation">{</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserInfo</span><span class="token punctuation">&gt;</span></span> <span class="token function">getAllUsersList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>com.meturing.service.impl.UserInfoServiceImpl.java</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Service</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserInfoServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">UserInfoService</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">private</span> <span class="token class-name">UserInfoMapper</span> userInfoMapper<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserInfo</span><span class="token punctuation">&gt;</span></span> <span class="token function">getAllUsersList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> userInfoMapper<span class="token punctuation">.</span><span class="token function">getAllUsersList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>com.meturing.mapper.UserInfoMapper.java</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Mapper</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UserInfoMapper</span> <span class="token punctuation">{</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserInfo</span><span class="token punctuation">&gt;</span></span> <span class="token function">getAllUsersList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>resources/com/meturing/mapper/UserInfoMapper.xml</p><div class="language-XMl line-numbers-mode" data-ext="XMl"><pre class="language-XMl"><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;!DOCTYPE mapper
        PUBLIC &quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;
        &quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;&gt;
&lt;mapper namespace=&quot;com.meturing.mapper.UserInfoMapper&quot;&gt;
    &lt;select id=&quot;getAllUsersList&quot; resultType=&quot;com.meturing.pojo.UserInfo&quot;&gt;
        select * from userinfo
    &lt;/select&gt;
&lt;/mapper&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="一些小tips" tabindex="-1"><a class="header-anchor" href="#一些小tips" aria-hidden="true">#</a> 一些小Tips</h3><h4 id="快速生成mybatis所需文件" tabindex="-1"><a class="header-anchor" href="#快速生成mybatis所需文件" aria-hidden="true">#</a> 快速生成Mybatis所需文件</h4><p>我们在IDEA中可以快速对指定的表生成Mybatis的所需文件(类似逆向工程),操作如下:<br><img src="`+u+'" alt="" loading="lazy"></p><p>添加插件<br><img src="'+d+'" alt="" loading="lazy"></p><p>添加数据源<br><img src="'+k+'" alt="" loading="lazy"></p><p>选择表格使用 MybatisX-Generator<br><img src="'+v+'" alt="" loading="lazy"></p><p>配置参考 :<br><img src="'+m+'" alt="" loading="lazy"><br><img src="'+g+'" alt="" loading="lazy"></p><blockquote><p>注意 : 自动生成的是Mybatis-plus的模板,需要Mybatis-plus的依赖支持</p></blockquote><h4 id="mybatis的个性化映射配置" tabindex="-1"><a class="header-anchor" href="#mybatis的个性化映射配置" aria-hidden="true">#</a> Mybatis的个性化映射配置</h4>',32),E=s("br",null,null,-1),I=a('<figure><img src="'+b+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>但是在SpringBoot中我们就相对自由了很多,对于文件名称不一致与文件层级不一致都有自定义的处理,如下:</p><h5 id="映射文件层级不一致" tabindex="-1"><a class="header-anchor" href="#映射文件层级不一致" aria-hidden="true">#</a> 映射文件层级不一致</h5><p>如果映射文件的层级不一致,我们可以使用<code>mybatis.mapper-locations</code>来配置扫描Mapper的路径</p><figure><img src="'+y+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>修改Yml文件如下:</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">spring</span><span class="token punctuation">:</span>
  <span class="token key atrule">datasource</span><span class="token punctuation">:</span>
    <span class="token key atrule">url</span><span class="token punctuation">:</span> jdbc<span class="token punctuation">:</span>mysql<span class="token punctuation">:</span>//165.154.132.59<span class="token punctuation">:</span>3306/codernotes<span class="token punctuation">?</span>useSSL=false<span class="token important">&amp;useUnicode=true&amp;characterEncoding=UTF-8&amp;serverTimezone=Asia/Shanghai</span>
    <span class="token key atrule">driver-class-name</span><span class="token punctuation">:</span> com.mysql.cj.jdbc.Driver
    <span class="token key atrule">username</span><span class="token punctuation">:</span> CoderNotes
    <span class="token key atrule">password</span><span class="token punctuation">:</span> CoderNotes
<span class="token key atrule">server</span><span class="token punctuation">:</span>
  <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8081</span>
  <span class="token key atrule">servlet</span><span class="token punctuation">:</span>
    <span class="token key atrule">context-path</span><span class="token punctuation">:</span> /springboot03
<span class="token key atrule">mybatis</span><span class="token punctuation">:</span>
  <span class="token key atrule">type-aliases-package</span><span class="token punctuation">:</span> com.meturing.pojo <span class="token comment">#指定pojo的位置</span>
  <span class="token key atrule">mapper-locations</span><span class="token punctuation">:</span> classpath<span class="token punctuation">:</span>mapper/<span class="token important">*.xml</span>  <span class="token comment">#如果没有将Mapper与接口放到一起,可以使用该参数指定Mapper的位置</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="映射文件名称不一致" tabindex="-1"><a class="header-anchor" href="#映射文件名称不一致" aria-hidden="true">#</a> 映射文件名称不一致</h5><p>如果映射文件名称不一致,则遵守XML配置的namespace全类路径进行映射</p><figure><img src="`+L+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="实现分页功能" tabindex="-1"><a class="header-anchor" href="#实现分页功能" aria-hidden="true">#</a> 实现分页功能</h2>',11),N=a('<p>接下来我们将快速的在SpringBoot工程中整合该插件的使用</p><h3 id="环境准备" tabindex="-1"><a class="header-anchor" href="#环境准备" aria-hidden="true">#</a> 环境准备</h3><h4 id="数据准备" tabindex="-1"><a class="header-anchor" href="#数据准备" aria-hidden="true">#</a> 数据准备</h4><div class="language-SQL line-numbers-mode" data-ext="SQL"><pre class="language-SQL"><code>CREATE TABLE `student` (\n    `stuid` int(11) NOT NULL AUTO_INCREMENT,\n    `stuname` varchar(20) DEFAULT NULL,\n    `stuage` int(2) DEFAULT NULL,\n    `stugender` char(2) DEFAULT NULL,\n    `filename` varchar(100) DEFAULT NULL,\n    `filetype` varchar(20) DEFAULT NULL,\n    PRIMARY KEY (`stuid`)\n) ENGINE=InnoDB AUTO_INCREMENT=22 DEFAULT   CHARSET=utf8;\n\ninsert into `student`(`stuid`,`stuname`,`stuage`,`stugender`,`filename`,`filetype`)   values   (1,&#39;name1&#39;,11,&#39;1&#39;,NULL,NULL),(2,&#39;name2&#39;,12,&#39;0&#39;,NULL,NULL),(3,&#39;name3&#39;,13,&#39;1&#39;,NULL,NULL),(4,&#39;name4&#39;,14,&#39;1&#39;,NULL,NULL),(5,&#39;name5&#39;,15,&#39;1&#39;,NULL,NULL),(6,&#39;name6&#39;,16,&#39;0&#39;,NULL,NULL),(7,&#39;name7&#39;,17,&#39;0&#39;,NULL,NULL),(8,&#39;name8&#39;,18,&#39;0&#39;,NULL,NULL),(9,&#39;name9&#39;,19,&#39;0&#39;,NULL,NULL),(10,&#39;name10&#39;,20,&#39;1&#39;,NULL,NULL),(11,&#39;name11&#39;,11,&#39;0&#39;,NULL,NULL),(12,&#39;name12&#39;,12,&#39;1&#39;,NULL,NULL),(13,&#39;name13&#39;,13,&#39;0&#39;,NULL,NULL),(14,&#39;name14&#39;,14,&#39;1&#39;,NULL,NULL),(15,&#39;name15&#39;,15,&#39;0&#39;,NULL,NULL),(16,&#39;name16&#39;,16,&#39;1&#39;,NULL,NULL),(17,&#39;name17&#39;,17,&#39;1&#39;,NULL,NULL),(18,&#39;name18&#39;,18,&#39;0&#39;,NULL,NULL),(19,&#39;name19&#39;,19,&#39;1&#39;,NULL,NULL),(20,&#39;name20&#39;,20,&#39;0&#39;,NULL,NULL);\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="导入依赖-1" tabindex="-1"><a class="header-anchor" href="#导入依赖-1" aria-hidden="true">#</a> 导入依赖</h4><p>导入pagehelper启动器</p><div class="language-XMl line-numbers-mode" data-ext="XMl"><pre class="language-XMl"><code>&lt;!--pagehelper分页插件--&gt;\n&lt;dependency&gt;\n	&lt;groupId&gt;com.github.pagehelper&lt;/groupId&gt;\n	&lt;artifactId&gt;pagehelper-spring-boot-starter&lt;/artifactId&gt;\n	&lt;version&gt;1.2.12&lt;/version&gt;\n&lt;/dependency&gt;\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="实现分页" tabindex="-1"><a class="header-anchor" href="#实现分页" aria-hidden="true">#</a> 实现分页</h3><p>接下来我们将使用Restful风格实现对数据的分页处理<br><img src="'+f+`" alt="" loading="lazy"></p><p>com.meturing.pojo.UserInfo.java</p><div class="language-Java line-numbers-mode" data-ext="Java"><pre class="language-Java"><code>@Data
@AllArgsConstructor
@NoArgsConstructor
@ToString
public class UserInfo implements Serializable {
	private Integer id;
    private String name;
    private String password;
    private static final long serialVersionUID = 1L;
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>com.meturing.controller.UserInfoController.java</p><div class="language-Java line-numbers-mode" data-ext="Java"><pre class="language-Java"><code>@RestController
public class UserInfoController {
    @Autowired
    private UserInfoService userInfoService;
	@RequestMapping(&quot;/getAllUsersByPage/{page}/{size}&quot;)
    public PageInfo&lt;UserInfo&gt; getAllUsersByPage(@PathVariable(&quot;page&quot;) Integer page, @PathVariable(&quot;size&quot;) Integer size){
        return userInfoService.getAllUsersByPage(page,size);
    }
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>com.meturing.service.UserInfoService.java</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UserInfoService</span> <span class="token punctuation">{</span>
    <span class="token class-name">PageInfo</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserInfo</span><span class="token punctuation">&gt;</span></span> <span class="token function">getAllUsersByPage</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> page<span class="token punctuation">,</span> <span class="token class-name">Integer</span> size<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>com.meturing.service.impl.UserInfoServiceImpl.java</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Service</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserInfoServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">UserInfoService</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">private</span> <span class="token class-name">UserInfoMapper</span> userInfoMapper<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">PageInfo</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserInfo</span><span class="token punctuation">&gt;</span></span> <span class="token function">getAllUsersByPage</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> page<span class="token punctuation">,</span> <span class="token class-name">Integer</span> size<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">PageHelper</span><span class="token punctuation">.</span><span class="token function">startPage</span><span class="token punctuation">(</span>page<span class="token punctuation">,</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserInfo</span><span class="token punctuation">&gt;</span></span> allUsersList <span class="token operator">=</span> userinfoMapper<span class="token punctuation">.</span><span class="token function">getAllUsersList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">PageInfo</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>allUsersList<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>com.meturing.mapper.UserInfoMapper.java</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Mapper</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UserInfoMapper</span> <span class="token punctuation">{</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserInfo</span><span class="token punctuation">&gt;</span></span> <span class="token function">getAllUsersList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>resources/com/meturing/mapper/UserInfoMapper.xml</p><div class="language-XMl line-numbers-mode" data-ext="XMl"><pre class="language-XMl"><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;!DOCTYPE mapper
        PUBLIC &quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;
        &quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;&gt;
&lt;mapper namespace=&quot;com.meturing.mapper.UserInfoMapper&quot;&gt;
    &lt;select id=&quot;getAllUsersList&quot; resultType=&quot;com.meturing.pojo.UserInfo&quot;&gt;
        select * from userinfo
    &lt;/select&gt;
&lt;/mapper&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,21);function A(w,x){const e=o("RouterLink");return l(),c("div",null,[h,s("p",null,[n("在之前的学习中,我建议UserInfoMapper.java与UserInfoMapper.xml的层级与名称保持一致,"),E,n(" 详见:"),t(e,{to:"/doc/02_%E5%88%9D%E7%BA%A7%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88/01_%E7%AC%AC%E4%B8%80%E9%98%B6%E6%AE%B5/05_%E5%9F%BA%E7%A1%80%E6%A1%86%E6%9E%B6/01_Mybatis%E5%9F%BA%E7%A1%80/05_Mybatis%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F%E7%9A%84%E5%BC%80%E5%8F%91/Mybatis%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F%E7%9A%84%E5%BC%80%E5%8F%91.html#%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9"},{default:p(()=>[n("注意事项")]),_:1})]),I,s("p",null,[n("我们在之前的学习中了解了PageHelper分页插件的使用,详见 "),t(e,{to:"/doc/02_%E5%88%9D%E7%BA%A7%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88/01_%E7%AC%AC%E4%B8%80%E9%98%B6%E6%AE%B5/05_%E5%9F%BA%E7%A1%80%E6%A1%86%E6%9E%B6/01_Mybatis%E5%9F%BA%E7%A1%80/10_%E4%BD%BF%E7%94%A8PageHelper%E5%AE%9E%E7%8E%B0%E5%88%86%E9%A1%B5/%E4%BD%BF%E7%94%A8PageHelper%E5%AE%9E%E7%8E%B0%E5%88%86%E9%A1%B5.html"},{default:p(()=>[n("使用PageHelper实现分页")]),_:1}),n(".")]),N])}const S=i(U,[["render",A],["__file","SpringBoot整合Mybatis与分页.html.vue"]]);export{S as default};
